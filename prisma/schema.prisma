// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userid        Int       @id @default(autoincrement())
  username      String    @db.VarChar(50)
  password      String    @db.VarChar(255)
  email         String    @db.VarChar(100) @unique
  resetOTP      String?
  resetOTPExpiry DateTime?
  role          UserRole  @default(JOBSEEKER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  resumes       Resume[]
  applications  Application[]
  company       Company?
}

model Company {
  companyid      Int     @id @default(autoincrement())
  company_name   String  @db.VarChar(100)
  email          String  @db.VarChar(100) @unique
  contact_number String? @db.VarChar(20)
  country_state  String? @db.VarChar(100)
  address        String? @db.VarChar(255)
  license        String? @db.VarChar(100)
  license_status String? @db.VarChar(50)
  company_photo  String? @db.VarChar(255)
  userId         Int?    @unique
  user           User?   @relation(fields: [userId], references: [userid])
  jobs           Job[]
}

model Job {
  jobid        Int     @id @default(autoincrement())
  company      Company @relation(fields: [companyid], references: [companyid], onDelete: Cascade)
  companyid    Int
  position     String  @db.VarChar(100)
  typesofwork  String? @db.VarChar(100)
  salaryrange  String? @db.VarChar(50)
  requirements String?
  contactdetails String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  applications Application[]
}

model Resume {
  resumeid   Int     @id @default(autoincrement())
  user       User    @relation(fields: [userid], references: [userid], onDelete: Cascade)
  userid     Int
  filename   String  @db.VarChar(255)
  filepath   String  @db.VarChar(255)
  education  String?
  language   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  applications Application[]
}

model Application {
  applicationid   Int     @id @default(autoincrement())
  user            User    @relation(fields: [userid], references: [userid], onDelete: Cascade)
  userid          Int
  job             Job     @relation(fields: [jobid], references: [jobid], onDelete: Cascade)
  jobid           Int
  resume          Resume? @relation(fields: [resumeid], references: [resumeid])
  resumeid        Int?
  status          ApplicationStatus @default(PENDING)
  applicationdate DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum UserRole {
  ADMIN
  EMPLOYER
  JOBSEEKER
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
